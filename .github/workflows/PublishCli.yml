name: Publish CLI

on:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-gnu
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - x86_64-apple-darwin
          - aarch64-apple-darwin

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Extract Package Version"
        id: cargo-version
        run: |
          version=v$(grep -oP 'version\s*=\s*"\K[0-9]+\.[0-9]+\.[0-9]+' crates/cli/Cargo.toml | head -n 1)
          echo "PACKAGE_VERSION=$version"
          echo "PACKAGE_VERSION=$version" >> $GITHUB_ENV

      - name: "Set up Rust"
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: "Update Package List"
        run: sudo apt-get update -y

      - name: "Install Dependencies"
        run: sudo apt-get install -y mingw-w64 libudev-dev zip

      - name: "Build"
        run: cargo build --release --package dygma --bin dygma --target ${{ matrix.target }}

      - name: "Zip"
        run: |
          executable_name="dygma"
          [ "${{ matrix.target }}" == *"windows"* ] && executable_name+=".exe"
          cp target/${{ matrix.target }}/release/${executable_name} .
          zip dygma-${{ env.PACKAGE_VERSION }}-${{ matrix.target }}.zip "$executable_name"
        env:
          PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}

      - name: "Upload Artifacts"
        uses: actions/upload-artifact@v4
        with:
          path: dygma-${{ env.PACKAGE_VERSION }}-${{ matrix.target }}.zip
          name: dygma-${{ env.PACKAGE_VERSION }}-${{ matrix.target }}.zip

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Extract Package Version"
        id: cargo-version
        run: |
          version=v$(grep -oP 'version\s*=\s*"\K[0-9]+\.[0-9]+\.[0-9]+' crates/cli/Cargo.toml | head -n 1)
          echo "PACKAGE_VERSION=$version"
          echo "PACKAGE_VERSION=$version" >> $GITHUB_ENV

      - name: "Download Artifacts"
        uses: actions/download-artifact@v4
        with:
          pattern: '**/dygma-*.zip'
          merge-multiple: true
          path: .

      - name: "Create Git Tag"
        run: |
          git config --local user.name "GitHub Action"
          git config --local user.email "action@github.com"
          git tag -a ${{ env.PACKAGE_VERSION }} -m "${{ env.PACKAGE_VERSION }}"
          git push origin ${{ env.PACKAGE_VERSION }}

      - name: "Create GitHub Release"
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.PACKAGE_VERSION }}
          release_name: ${{ env.PACKAGE_VERSION }}
          files: |
            dygma-${{ env.PACKAGE_VERSION }}-*.zip
